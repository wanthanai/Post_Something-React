[{"C:\\Users\\prode\\Desktop\\test\\test-facebook\\src\\index.js":"1","C:\\Users\\prode\\Desktop\\test\\test-facebook\\src\\App.js":"2","C:\\Users\\prode\\Desktop\\test\\test-facebook\\src\\component\\Navbar.js":"3","C:\\Users\\prode\\Desktop\\test\\test-facebook\\src\\component\\Input.js":"4","C:\\Users\\prode\\Desktop\\Post_Something-React\\src\\index.js":"5","C:\\Users\\prode\\Desktop\\Post_Something-React\\src\\App.js":"6","C:\\Users\\prode\\Desktop\\Post_Something-React\\src\\component\\Navbar.js":"7","C:\\Users\\prode\\Desktop\\Post_Something-React\\src\\component\\Input.js":"8","C:\\Users\\prode\\Desktop\\Post_Something-React\\src\\component\\PostHasImg.js":"9","C:\\Users\\prode\\Desktop\\Post_Something-React\\src\\actions\\index.js":"10","C:\\Users\\prode\\Desktop\\Post_Something-React\\src\\reducers\\deleteImgOne.js":"11"},{"size":538,"mtime":1611304608493,"results":"12","hashOfConfig":"13"},{"size":21203,"mtime":1611588439834,"results":"14","hashOfConfig":"13"},{"size":8774,"mtime":1611042628948,"results":"15","hashOfConfig":"13"},{"size":4967,"mtime":1611588274281,"results":"16","hashOfConfig":"13"},{"size":938,"mtime":1613747163257,"results":"17","hashOfConfig":"18"},{"size":37596,"mtime":1614094740493,"results":"19","hashOfConfig":"18"},{"size":9249,"mtime":1614091733621,"results":"20","hashOfConfig":"18"},{"size":5071,"mtime":1614094549274,"results":"21","hashOfConfig":"18"},{"size":10798,"mtime":1614000293121,"results":"22","hashOfConfig":"18"},{"size":9700,"mtime":1614091789339,"results":"23","hashOfConfig":"18"},{"size":6113,"mtime":1614089213014,"results":"24","hashOfConfig":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o8fl99",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1kcd3lv",{"filePath":"36","messages":"37","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\prode\\Desktop\\test\\test-facebook\\src\\index.js",[],"C:\\Users\\prode\\Desktop\\test\\test-facebook\\src\\App.js",["49","50"],"C:\\Users\\prode\\Desktop\\test\\test-facebook\\src\\component\\Navbar.js",[],"C:\\Users\\prode\\Desktop\\test\\test-facebook\\src\\component\\Input.js",["51"],"C:\\Users\\prode\\Desktop\\Post_Something-React\\src\\index.js",[],["52","53"],"C:\\Users\\prode\\Desktop\\Post_Something-React\\src\\App.js",["54","55","56","57","58","59","60","61","62"],"C:\\Users\\prode\\Desktop\\Post_Something-React\\src\\component\\Navbar.js",[],"C:\\Users\\prode\\Desktop\\Post_Something-React\\src\\component\\Input.js",[],"C:\\Users\\prode\\Desktop\\Post_Something-React\\src\\component\\PostHasImg.js",["63"],"//! Import\r\nimport React, { useRef, useState } from 'react'\r\nimport './Post.css'\r\n// Icon\r\nimport { HiDotsHorizontal } from \"react-icons/hi\";\r\n// PropTypes\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n//! Variable\r\nlet idImagesPost = 1;\r\n\r\n\r\n//! Main Component\r\nexport default function PostHasImg ({inputProfileImg, inputProfileName, onClickShowImage, idPost, img, title, setUrlShowImage, setListImagesPost, openWindowListImagesPost, receiveIdPost, setIndexListImages }) {\r\n    //! useState\r\n    \r\n    //! useRef\r\n    const refTextPost = useRef(null);\r\n    \r\n\r\n    // if(textInputPost !== '') {\r\n    //     setWidthTextPost(refTextPost.current.children[0].offsetWidth);\r\n    // } \r\n\r\n\r\n    //! Function\r\n    //* 1. open window show list images post\r\n    const openListImagesPost = async() => {\r\n        // setState\r\n        await setListImagesPost(img);\r\n        await receiveIdPost(idPost);\r\n        await openWindowListImagesPost();\r\n        await setIndexListImages();\r\n    } \r\n\r\n\r\n    //! Component\r\n    return (\r\n        <div className=\"post_container\">\r\n            <div className=\"post_wrapper\">\r\n\r\n                {img.length === 0\r\n                    ?\r\n                    <>\r\n                        {/* Post Top */}\r\n                        <div className=\"post_top\">\r\n                            {/* top left */}\r\n                            <div \r\n                            className=\"image_profile\" \r\n                            style={inputProfileImg ? {background: `url(${inputProfileImg}) no-repeat center/cover`} : {background: `#fff`}}\r\n                            onClick={() => onClickShowImage(inputProfileImg)}\r\n                            >{/* Image Profile */}</div>\r\n\r\n                            {/* top center */}\r\n                            <div className=\"post_top_center\">\r\n                                {/* name */}\r\n                                <p className=\"post_name\">{inputProfileName ? inputProfileName : 'Enter Name..'}</p>\r\n                                {/* time */}\r\n                                <p className=\"post_time\">now.</p>\r\n                            </div>\r\n\r\n                            {/* top right */}\r\n                            <div className=\"post_top_right\">\r\n                                <HiDotsHorizontal className=\"post_dot\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Post Center Content */}\r\n                        <div className=\"post_center\">\r\n                            {/* Text */}\r\n                            {/* <p className=\"post_text\">{textInputPost}</p> */}\r\n                            <p className=\"textPost\" ref={refTextPost}>\r\n                                {title}\r\n                            </p>\r\n                        </div>\r\n                    </>\r\n                    : null\r\n                }\r\n\r\n                {img.length === 1 \r\n                    ? \r\n                    <>\r\n                        {/* Post Top */}\r\n                        <div className=\"post_top\">\r\n                            {/* top left */}\r\n                            <div \r\n                            className=\"image_profile\" \r\n                            style={inputProfileImg ? {background: `url(${inputProfileImg}) no-repeat center/cover`} : {background: `#fff`}}\r\n                            onClick={() => onClickShowImage(inputProfileImg)}\r\n                            >{/* Image Profile */}</div>\r\n\r\n                            {/* top center */}\r\n                            <div className=\"post_top_center\">\r\n                                {/* name */}\r\n                                <p className=\"post_name\">{inputProfileName ? inputProfileName : 'Enter Name..'}</p>\r\n                                {/* time */}\r\n                                <p className=\"post_time\">now.</p>\r\n                            </div>\r\n\r\n                            {/* top right */}\r\n                            <div className=\"post_top_right\">\r\n                                <HiDotsHorizontal className=\"post_dot\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Post Center Content */}\r\n                        <div className=\"post_center\">\r\n                            {/* Text */}\r\n                            {/* <p className=\"post_text\">{textInputPost}</p> */}\r\n                            <p className=\"textPost\" ref={refTextPost}>\r\n                                {title}\r\n                            </p>\r\n\r\n                            {/* Image */}\r\n                            <ul className=\"post_content_image\">\r\n                                {img.map((img) => {\r\n                                    return(\r\n                                        <li>\r\n                                            <img onClick={() => setUrlShowImage(img.data_url)} src={img.data_url} alt=\"post-img\" />\r\n                                        </li>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </>\r\n                    : null\r\n                }\r\n\r\n                {img.length === 2 \r\n                    ? \r\n                    <>\r\n                        {/* Post Top */}\r\n                        <div className=\"post_top\">\r\n                            {/* top left */}\r\n                            <div \r\n                            className=\"image_profile\" \r\n                            style={inputProfileImg ? {background: `url(${inputProfileImg}) no-repeat center/cover`} : {background: `#fff`}}\r\n                            onClick={() => onClickShowImage(inputProfileImg)}\r\n                            >{/* Image Profile */}</div>\r\n\r\n                            {/* top center */}\r\n                            <div className=\"post_top_center\">\r\n                                {/* name */}\r\n                                <p className=\"post_name\">{inputProfileName ? inputProfileName : 'Enter Name..'}</p>\r\n                                {/* time */}\r\n                                <p className=\"post_time\">now.</p>\r\n                            </div>\r\n\r\n                            {/* top right */}\r\n                            <div className=\"post_top_right\">\r\n                                <HiDotsHorizontal className=\"post_dot\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Post Center Content */}\r\n                        <div className=\"post_center\">\r\n                            {/* Text */}\r\n                            {/* <p className=\"post_text\">{textInputPost}</p> */}\r\n                            <p className=\"textPost\" ref={refTextPost}>\r\n                                {title}\r\n                            </p>\r\n\r\n                            {/* Image */}\r\n                            <ul className=\"post_content_image twoImg\">\r\n                                {img.map((img) => {\r\n                                    idImagesPost++\r\n                                    return(\r\n                                        <li key={idImagesPost}>\r\n                                            <img onClick={() => setUrlShowImage(img.data_url)} src={img.data_url} alt=\"post-img\" />\r\n                                        </li>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </>\r\n                    : null\r\n                }\r\n\r\n                {img.length > 2 \r\n                    ?\r\n                    <>\r\n                        {/* Post Top */}\r\n                        <div className=\"post_top\">\r\n                            {/* top left */}\r\n                            <div \r\n                            className=\"image_profile\" \r\n                            style={inputProfileImg ? {background: `url(${inputProfileImg}) no-repeat center/cover`} : {background: `#fff`}}\r\n                            onClick={() => onClickShowImage(inputProfileImg)}\r\n                            >{/* Image Profile */}</div>\r\n\r\n                            {/* top center */}\r\n                            <div className=\"post_top_center\">\r\n                                {/* name */}\r\n                                <p className=\"post_name\">{inputProfileName ? inputProfileName : 'Enter Name..'}</p>\r\n                                {/* time */}\r\n                                <p className=\"post_time\">now.</p>\r\n                            </div>\r\n\r\n                            {/* top right */}\r\n                            <div className=\"post_top_right\">\r\n                                <HiDotsHorizontal className=\"post_dot\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Post Center Content */}\r\n                        <div className=\"post_center\">\r\n                            {/* Text */}\r\n                            {/* <p className=\"post_text\">{textInputPost}</p> */}\r\n                            <p className=\"textPost\" ref={refTextPost}>\r\n                                {title}\r\n                            </p>\r\n\r\n                            {/* Image */}\r\n                            <ul className=\"post_content_image moreThanTwo\">\r\n                                {img.map((image) => {\r\n                                    idImagesPost++\r\n                                    return(\r\n                                        <li key={idImagesPost}>\r\n                                            <div onClick={() => openListImagesPost()}>\r\n                                                <img src={image.data_url} alt=\"post-img\" />\r\n                                            </div>\r\n                                            <span className=\"number_moreThanTwo\">+{img.length - 2}</span>\r\n                                        </li>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </>\r\n                    : null\r\n                }\r\n                \r\n\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//! PropTypes \r\nPostHasImg.prototype = {\r\n    inputProfileImg: PropTypes.string.isRequired,\r\n    inputProfileName: PropTypes.string.isRequired, \r\n    onClickShowImage: PropTypes.func.isRequired, \r\n    id: PropTypes.number.isRequired,\r\n    img: PropTypes.object.isRequired,\r\n    title: PropTypes.string.isRequired, \r\n    setUrlShowImage: PropTypes.func.isRequired,\r\n    setListImagesPost: PropTypes.func.isRequired,\r\n    openWindowListImagesPost: PropTypes.func.isRequired,\r\n    receiveIdPost: PropTypes.func.isRequired,\r\n    setIndexListImages: PropTypes.func.isRequired\r\n}","C:\\Users\\prode\\Desktop\\Post_Something-React\\src\\actions\\index.js",[],"C:\\Users\\prode\\Desktop\\Post_Something-React\\src\\reducers\\deleteImgOne.js",["64"],{"ruleId":"65","severity":1,"message":"66","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":13},{"ruleId":"69","severity":1,"message":"70","line":487,"column":54,"nodeType":"71","messageId":"72","endLine":487,"endColumn":56},{"ruleId":"65","severity":1,"message":"73","line":2,"column":16,"nodeType":"67","messageId":"68","endLine":2,"endColumn":24},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"65","severity":1,"message":"78","line":16,"column":39,"nodeType":"67","messageId":"68","endLine":16,"endColumn":57},{"ruleId":"65","severity":1,"message":"79","line":30,"column":10,"nodeType":"67","messageId":"68","endLine":30,"endColumn":13},{"ruleId":"65","severity":1,"message":"80","line":30,"column":15,"nodeType":"67","messageId":"68","endLine":30,"endColumn":19},{"ruleId":"65","severity":1,"message":"81","line":49,"column":5,"nodeType":"67","messageId":"68","endLine":49,"endColumn":11},{"ruleId":"65","severity":1,"message":"82","line":75,"column":29,"nodeType":"67","messageId":"68","endLine":75,"endColumn":47},{"ruleId":"65","severity":1,"message":"83","line":79,"column":11,"nodeType":"67","messageId":"68","endLine":79,"endColumn":16},{"ruleId":"69","severity":1,"message":"84","line":203,"column":29,"nodeType":"71","messageId":"85","endLine":203,"endColumn":31},{"ruleId":"69","severity":1,"message":"84","line":236,"column":29,"nodeType":"71","messageId":"85","endLine":236,"endColumn":31},{"ruleId":"69","severity":1,"message":"70","line":673,"column":58,"nodeType":"71","messageId":"72","endLine":673,"endColumn":60},{"ruleId":"65","severity":1,"message":"73","line":2,"column":25,"nodeType":"67","messageId":"68","endLine":2,"endColumn":33},{"ruleId":"86","severity":1,"message":"87","line":168,"column":9,"nodeType":"88","messageId":"89","endLine":169,"endColumn":26},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"'IoConstructOutline' is defined but never used.","'any' is defined but never used.","'func' is defined but never used.","'idPost' is assigned a value but never used.","'setStatusInputMain' is assigned a value but never used.","'posts' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-global-assign","no-unsafe-negation"]